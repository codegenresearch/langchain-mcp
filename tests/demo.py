# Copyright (C) 2024 Andrew Wason\n# SPDX-License-Identifier: MIT\n\nimport asyncio\nimport pathlib\nimport sys\n\nfrom langchain_core.messages import HumanMessage, AIMessage, BaseMessage\nfrom langchain_core.output_parsers import StrOutputParser\nfrom langchain_groq import ChatGroq\nfrom mcp import ClientSession, StdioServerParameters\nfrom mcp.client.stdio import stdio_client\n\nfrom langchain_mcp import MCPToolkit\nfrom langchain_mcp.tools import BaseTool\n\n\nasync def initialize_toolkit(session: ClientSession) -> MCPToolkit:\n    toolkit = MCPToolkit(session=session)\n    await toolkit.initialize()\n    return toolkit\n\n\nasync def run(tools: list[BaseTool], prompt: str) -> str:\n    model = ChatGroq(model="llama-3.1-8b-instant")  # requires GROQ_API_KEY\n    tools_model = model.bind_tools(tools)\n    messages: list[BaseMessage] = [HumanMessage(prompt)]\n    ai_message = await tools_model.ainvoke(messages)\n    messages.append(ai_message)\n    tools_map = {tool.name: tool for tool in tools}\n    for tool_call in ai_message.tool_calls:\n        selected_tool = tools_map.get(tool_call["name"])\